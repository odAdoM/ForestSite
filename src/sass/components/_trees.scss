@use 'abstracts/colors' as c;

//$size: 4px;
$clr: c.$almost-black;
$opacityDest: 1;
$opacityStart: 1;
$rounded: 30%;
$easing: ease-in;

:root {
	--size: 4px;
}

.tree.one {
	left: 15%;
	transform: scale(0.8, 0.9);
}

.tree.two {
	left: 15%;
	transform: scaleX(0.7);
	animation: shaky-2 2.8s infinite both ease-out;
	animation-composition: add;
	animation-play-state: paused;
}
.tree.three {
	left: 50%;
	transform: scale(0.8, 0.9);
	animation: shaky-1 3s infinite both ease-out 0.3s;
	animation-composition: add;
	animation-play-state: paused;
}
.tree.four {
	left: 85%;
	transform: scale(0.6, 0.7);
}
.tree.five {
	left: 90%;
	transform: scale(0.9, 0.8);
}
.tree.six {
	left: 10%;
	transform: scale(0.55);
}
.tree.seven {
	left: 80%;
	transform: scale(0.5, 1);
}
.tree.eight {
	left: 38%;
	transform: scale(0.6, 0.7);

	animation: shaky-4 3s infinite both ease-out 0.3s;
	animation-composition: add;
	animation-play-state: paused;
}
.tree.nine {
	left: 80%;
	transform: scale(0.8);

	& > span:not(.tri-ground),
	& > span:not(.tri-ground)::before,
	& > span:not(.tri-ground)::after {
		border-top-right-radius: 90%;
	}

	animation: shaky-3 4s infinite both ease-out;
	animation-composition: add;
	animation-play-state: paused;
}
.tree.ten {
	left: 90%;
	transform: scale(1.1, 0.9);

	& > span:not(.tri-ground),
	& > span:not(.tri-ground)::before,
	& > span:not(.tri-ground)::after {
		border-top-right-radius: 100%;
	}

	animation: shaky-3 4s infinite both ease-out 0.3s;
	animation-composition: add;
	animation-play-state: paused;
}

.trees {
	position: absolute;
	text-align: left;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	z-index: 100;
	overflow: hidden;
	pointer-events: none;
	//background-color: rgba($color: #cc5f5f, $alpha: 0.3);

	&.over-state .triangleTree.tri-ground {
		bottom: 0px;
		opacity: $opacityDest;
	}
	&.over-state .triangleTree.tri-2 {
		transition-delay: 0.05s;
		bottom: calc(var(--size) * 2);
		opacity: $opacityDest;
	}
	&.over-state .triangleTree.tri-3 {
		transition-delay: 0.1s;
		bottom: calc(var(--size) * 4);
		opacity: $opacityDest;
	}
	&.over-state .triangleTree.tri-4 {
		transition-delay: 0.15s;
		bottom: calc(var(--size) * 6);
		opacity: $opacityDest;
	}
	&.over-state .tree.three {
		animation-play-state: running;
	}
	&.over-state .tree.two {
		animation-play-state: running;
	}
	&.over-state .tree.nine {
		animation-play-state: running;
	}
	&.over-state .tree.ten {
		animation-play-state: running;
	}
	&.over-state .tree.eight {
		animation-play-state: running;
	}
}

//-==========================================================
//-==========================================================

.tree {
	pointer-events: none;
	position: absolute;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 100%;
	top: 0;
	left: 0;
	transform-origin: center bottom;
}

.triangleTree {
	position: absolute;
	background-color: $clr;
	pointer-events: none;
}
.triangleTree:before,
.triangleTree:after {
	content: '';
	position: absolute;
	background-color: inherit;
	transition: bottom $easing;
}
.triangleTree,
.triangleTree:before,
.triangleTree:after {
	width: var(--size);
	height: var(--size);
	border-top-right-radius: $rounded;
}

.triangleTree {
	transform: rotate(-60deg) skewX(-30deg) scale(1, 0.866);
}
.triangleTree:before {
	transform: rotate(-135deg) skewX(-45deg) scale(1.414, 0.707) translate(0, -50%);
}
.triangleTree:after {
	transform: rotate(135deg) skewY(-45deg) scale(0.707, 1.414) translate(50%);
}

.triangleTree.tri-ground {
	opacity: $opacityStart;
	bottom: calc(var(--size) * -2);
	transition-duration: 0.25s;
	transition-delay: 0s;
	// background-color: red;
}

.triangleTree.tri-2,
.triangleTree.tri-2:before,
.triangleTree.tri-2:after {
	width: calc(var(--size) * 3.6);
	height: calc(var(--size) * 3.6);
	border-top-right-radius: $rounded;
}
.triangleTree.tri-2 {
	opacity: $opacityStart;
	bottom: calc(var(--size) * -6);
	transition-duration: 0.3s;
	//transition-delay: 0.1s;
	// background-color: gold;
}

.triangleTree.tri-3,
.triangleTree.tri-3:before,
.triangleTree.tri-3:after {
	width: calc(var(--size) * 3.2);
	height: calc(var(--size) * 3.2);
	border-top-right-radius: $rounded;
}
.triangleTree.tri-3 {
	opacity: $opacityStart;
	bottom: calc(var(--size) * -6);
	transition-duration: 0.3s;
	//transition-delay: 0.3s;
	// background-color: lime;
}

.triangleTree.tri-4,
.triangleTree.tri-4:before,
.triangleTree.tri-4:after {
	width: calc(var(--size) * 2.8);
	height: calc(var(--size) * 2.8);
	border-top-right-radius: $rounded;
}
.triangleTree.tri-4 {
	opacity: $opacityStart;
	bottom: calc(var(--size) * -5);
	transition-duration: 0.3s;
	//transition-delay: 0.5s;
	// background-color: lightblue;
}

@keyframes shaky-1 {
	0% {
		transform: rotate(0);
	}
	35% {
		transform: rotate(-13deg);
	}
	60% {
		transform: rotate(6deg);
	}
	100% {
		transform: rotate(0);
	}
}

@keyframes shaky-2 {
	0% {
		transform: rotate(0);
	}
	35% {
		transform: rotate(-6deg);
	}
	60% {
		transform: rotate(20deg);
	}
	100% {
		transform: rotate(0);
	}
}

@keyframes shaky-3 {
	0% {
		transform: rotate(0);
	}
	15% {
	}
	40% {
		transform: rotate(5deg);
	}
	70% {
		transform: rotate(-3deg);
	}
	100% {
		transform: rotate(0);
	}
}

@keyframes shaky-4 {
	0% {
		transform: rotate(0) scaleY(1);
	}
	15% {
		transform: rotate(-3deg) scaleY(0.9);
	}
	40% {
		transform: rotate(12deg) scaleY(1);
	}
	70% {
		transform: rotate(-2deg) scaleY(0.9);
	}
	100% {
		transform: rotate(0) scaleY(1);
	}
}
